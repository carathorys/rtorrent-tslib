{"version":3,"file":"XmlRpcEntity.js","sourceRoot":"","sources":["../../src/XmlRpc/XmlRpcEntity.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,wBAAwB,CAAC;AAM7D;IACE;QAAA,iBAMC;;QALC,MAAA,mBAAmB,CAAC,IAAI,CAAC,0CAAE,OAAO,CAAC,UAAC,KAAK;YACvC,IAAI,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU,MAAK,IAAI,EAAE;gBAC9B,KAAI,CAAC,QAAQ,CAAS,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;aACxC;QACH,CAAC,EAAE;IACL,CAAC;IAEM,+BAAQ,GAAf,UAA+D,GAAM,EAAE,KAAW;QAC9E,IAAsB,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACxC,CAAC;IACH,mBAAC;AAAD,CAAC,AAZD,IAYC","sourcesContent":["import { GetFieldsToPopulate } from './XmlPropertyDecorator';\n\ntype IndexedEntity<T extends XmlRpcEntity<T>> = {\n  [K in keyof T]: T[K];\n};\n\nexport class XmlRpcEntity<T extends XmlRpcEntity<T>> {\n  constructor() {\n    GetFieldsToPopulate(this)?.forEach((field) => {\n      if (field?.initialize === true) {\n        this.setValue<T, any>(field.key, null);\n      }\n    });\n  }\n\n  public setValue<X extends IndexedEntity<T>, K extends keyof X>(key: K, value: X[K]): void {\n    ((this as unknown) as X)[key] = value;\n  }\n}\n"]}