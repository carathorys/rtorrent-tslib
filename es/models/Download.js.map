{"version":3,"file":"Download.js","sourceRoot":"","sources":["../../src/models/Download.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AAEpD;IAA8B,4BAAsB;IAApD;;IA4EA,CAAC;IATC,sBAAW,8BAAQ;aAAnB;YACE,OAAO,IAAI,CAAC,MAAM,KAAK,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC;QACvD,CAAC;;;OAAA;IACD,sBAAW,8BAAQ;aAAnB;YACE,OAAO,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC;QACjF,CAAC;;;OAAA;IACD,sBAAW,+BAAS;aAApB;YACE,OAAO,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC;QAC/E,CAAC;;;OAAA;IAzED;QADC,SAAS,CAAW,QAAQ,CAAC;;0CACV;IAGpB;QADC,SAAS,CAAW,aAAa,CAAC;;+CACV;IAGzB;QADC,SAAS,CAAW,SAAS,CAAC;;2CACT;IAGtB;QADC,SAAS,CAAW,WAAW,CAAC;;4CACV;IAGvB;QADC,SAAS,CAAW,aAAa,CAAC;;8CACV;IAGzB;QADC,SAAS,CAAW,cAAc,CAAC;;+CACX;IAGzB;QADC,SAAS,CAAW,YAAY,CAAC;;8CACT;IAGzB;QADC,SAAS,CAAW,mBAAmB,CAAC;;oDACX;IAG9B;QADC,SAAS,CAAW,sBAAsB,CAAC;;uDACX;IAGjC;QADC,SAAS,CAAW,oBAAoB,CAAC;;sDACV;IAGhC;QADC,SAAS,CAAW,mBAAmB,CAAC;;oDACX;IAG9B;QADC,SAAS,CAAW,iBAAiB,CAAC;;kDACX;IAG5B;QADC,SAAS,CAAW,aAAa,CAAC;;8CACX;IAGxB;QADC,SAAS,CAAW,QAAQ,CAAC;;0CACV;IAGpB;QADC,SAAS,CAAW,WAAW,CAAC;;6CACV;IAGvB;QADC,SAAS,CAAW,qBAAqB,CAAC;;qDACX;IAGhC;QADC,SAAS,CAAW,cAAc,CAAC;;+CACV;IAG1B;QADC,SAAS,CAAW,YAAY,CAAC;;8CACT;IAGzB;QADC,SAAS,CAAW,YAAY,CAAC;;8CACV;IAGxB;QADC,SAAS,CAAW,mBAAmB,CAAC;;2CACpB;IAGrB;QADC,SAAS,CAAW,kBAAkB,CAAC;;oDACV;IAG9B;QADC,SAAS,CAAW,mBAAmB,CAAC;;oDACX;IAWhC,eAAC;CAAA,AA5ED,CAA8B,YAAY,GA4EzC;SA5EY,QAAQ","sourcesContent":["import { XmlRpcKey, XmlRpcEntity } from '../XmlRpc';\n\nexport class Download extends XmlRpcEntity<Download> {\n  @XmlRpcKey<Download>('d.name')\n  public name: string;\n\n  @XmlRpcKey<Download>('d.directory')\n  public directory: string;\n\n  @XmlRpcKey<Download>('d.state')\n  public state: boolean;\n\n  @XmlRpcKey<Download>('d.is_open')\n  public isOpen: boolean;\n\n  @XmlRpcKey<Download>('d.is_active')\n  public isActive: boolean;\n\n  @XmlRpcKey<Download>('d.bytes_done')\n  public bytesDone: number;\n\n  @XmlRpcKey<Download>('d.complete')\n  public complete: boolean;\n\n  @XmlRpcKey<Download>('d.completed_bytes')\n  public completedBytes: number;\n\n  @XmlRpcKey<Download>('d.connection_current')\n  public connectionCurrent: number;\n\n  @XmlRpcKey<Download>('d.connection_leech')\n  public connectedLeeches: number;\n\n  @XmlRpcKey<Download>('d.connection_seed')\n  public connectedSeeds: number;\n\n  @XmlRpcKey<Download>('d.creation_date')\n  public creationDate: string;\n\n  @XmlRpcKey<Download>('d.down.rate')\n  public downRate: number;\n\n  @XmlRpcKey<Download>('d.hash')\n  public hash: string;\n\n  @XmlRpcKey<Download>('d.hashing')\n  public hashing: number;\n\n  @XmlRpcKey<Download>('d.is_partially_done')\n  public isPartiallyDone: boolean;\n\n  @XmlRpcKey<Download>('d.is_private')\n  public isPrivate: boolean;\n\n  @XmlRpcKey<Download>('d.bitfield')\n  public bitfield: boolean;\n\n  @XmlRpcKey<Download>('d.priority')\n  public priority: number;\n\n  @XmlRpcKey<Download>('d.peers_accounted')\n  public peers: number;\n\n  @XmlRpcKey<Download>('d.peers_complete')\n  public peersCompleted: number;\n\n  @XmlRpcKey<Download>('d.peers_connected')\n  public connectedPeers: number;\n\n  public get IsClosed(): boolean {\n    return this.isOpen === false && this.state === false;\n  }\n  public get IsPaused(): boolean {\n    return this.isOpen === true && this.isActive === false && this.state === false;\n  }\n  public get IsStarted(): boolean {\n    return this.isOpen === true && this.isActive === true && this.state === true;\n  }\n}\n"]}